[{"id":"e39408b25de24f2f","type":"tab","label":"Flow 5","disabled":false,"info":"","env":[]},{"id":"3375503cd56abdf2","type":"mqtt in","z":"e39408b25de24f2f","name":"Daly2Sofar","topic":"Daly2Sofar/state","qos":"2","datatype":"json","broker":"98a72657b1ac3f6a","nl":false,"rap":true,"rh":0,"inputs":0,"x":200,"y":320,"wires":[["1a2c72dc2b45db10","67b4108976d65d29","17e9ec311821e2d2","0b9d7a22025c0ef9","894d68a30402359e"]]},{"id":"1a2c72dc2b45db10","type":"debug","z":"e39408b25de24f2f","name":"","active":true,"tosidebar":true,"console":false,"tostatus":false,"complete":"payload","targetType":"msg","statusVal":"","statusType":"auto","x":430,"y":260,"wires":[]},{"id":"67b4108976d65d29","type":"function","z":"e39408b25de24f2f","name":"Daly2Sofar-soc","func":"//State of Charge - %\nmsg.payload = msg.payload.soc;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":440,"y":340,"wires":[["bda2686c3791ed8c"]],"info":"This function sets the format of each parameter sent by the inverter and assigns each on to a global variable.\r\nTherefore, you can either pass the msg.payload object directly to the next function or pick up inverter \r\nparameters in any function using something like:\r\n\r\nUsing the complete object...\r\n\r\nvar sofar2mqtt = global.get(\"sofar2mqtt\");\r\nvar batterySoc = sofar2mqtt.batterySoc;\r\n\r\nor use individual variables...\r\n\r\nvar batterySoc = global.get(\"sofarBatterySOC\");"},{"id":"bda2686c3791ed8c","type":"ha-entity","z":"e39408b25de24f2f","name":"D2S-BatterySOC","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2SBatterySoc"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":"%"},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":710,"y":340,"wires":[["9b168219ed291141"]]},{"id":"17e9ec311821e2d2","type":"function","z":"e39408b25de24f2f","name":"Daly2Sofar-power","func":"//battery power - watts\nmsg.payload = msg.payload.power;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":580,"wires":[["070023b27242b73e"]],"info":"This function sets the format of each parameter sent by the inverter and assigns each on to a global variable.\r\nTherefore, you can either pass the msg.payload object directly to the next function or pick up inverter \r\nparameters in any function using something like:\r\n\r\nUsing the complete object...\r\n\r\nvar sofar2mqtt = global.get(\"sofar2mqtt\");\r\nvar batterySoc = sofar2mqtt.batterySoc;\r\n\r\nor use individual variables...\r\n\r\nvar batterySoc = global.get(\"sofarBatterySOC\");"},{"id":"070023b27242b73e","type":"ha-entity","z":"e39408b25de24f2f","name":"D2S-Power","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2SPower"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":"W"},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":690,"y":580,"wires":[["c2a0b87caa6bb9ea","4131d5a7c7c83afa","90f77a3d9e83bbc5"]]},{"id":"0b9d7a22025c0ef9","type":"function","z":"e39408b25de24f2f","name":"Daly2Sofar-imbalance","func":"//Cell imbalance between min&max cells in millivolts to volts\nvar imbalance = msg.payload.cellimbalance;\nimbalance = imbalance*0.001\nmsg.payload = imbalance.toFixed(3);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":460,"y":420,"wires":[["7d30dd6b636d0ecc"]],"info":"This function sets the format of each parameter sent by the inverter and assigns each on to a global variable.\r\nTherefore, you can either pass the msg.payload object directly to the next function or pick up inverter \r\nparameters in any function using something like:\r\n\r\nUsing the complete object...\r\n\r\nvar sofar2mqtt = global.get(\"sofar2mqtt\");\r\nvar batterySoc = sofar2mqtt.batterySoc;\r\n\r\nor use individual variables...\r\n\r\nvar batterySoc = global.get(\"sofarBatterySOC\");"},{"id":"7d30dd6b636d0ecc","type":"ha-entity","z":"e39408b25de24f2f","name":"D2S-Imbalance","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2SImbalance"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":"V"},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":700,"y":420,"wires":[[]]},{"id":"c2a0b87caa6bb9ea","type":"moving-average","z":"e39408b25de24f2f","name":"MovingAvg","amount":"20","weight":"cumulative","x":950,"y":580,"wires":[["6a17f542a4533bce"]]},{"id":"6a17f542a4533bce","type":"function","z":"e39408b25de24f2f","name":"","func":"var avgPower = msg.payload\nglobal.set(\"averagePower\", avgPower);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":1100,"y":580,"wires":[[]]},{"id":"9b168219ed291141","type":"function","z":"e39408b25de24f2f","name":"","func":"global.set(\"soc\",msg.payload);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":940,"y":340,"wires":[[]]},{"id":"4131d5a7c7c83afa","type":"function","z":"e39408b25de24f2f","name":"TimeLeftAtCurrentPower","func":"// Calculating how long it will take to charge or discharge, at the current rate.\n// Based on fixed battery capacity and DOD (the variables below).\n\nvar batteryCapacityKwh = 10;\nvar DOD = 80; // Depth of discharge - 80%\nvar socTarget = 95; // % charge that's considered 'full'\n\nvar averagePower = global.get(\"averagePower\");\nvar batteryStatus = global.get(\"chargeOrDischarge\");\nvar soc = global.get(\"soc\");\n\nvar batteryKwhLeft = 0;\nvar timeLeftatCurrentPower = 0;\n\nif (averagePower <0) {\n    // Discharging\n    batteryKwhLeft = (batteryCapacityKwh*(soc*0.01))-(batteryCapacityKwh*((100-DOD)*0.01));\n    timeLeftatCurrentPower = batteryKwhLeft/(Math.abs(averagePower)*0.001);\n} else {\n    // Charging\n    batteryKwhLeft = (batteryCapacityKwh*(socTarget*0.01))-(batteryCapacityKwh*(soc*0.01));\n    timeLeftatCurrentPower = batteryKwhLeft/(Math.abs(averagePower)*0.001);\n}\n\nif ( (soc > socTarget) || (batteryStatus === \"Resting ...\") ) { //  \n    timeLeftatCurrentPower = 0;\n}\n\n//msg.payload = Math.round(timeLeftatCurrentPower);\nmsg.payload = timeLeftatCurrentPower.toFixed(1);\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":990,"y":640,"wires":[["15aa0f2cb872620b"]]},{"id":"15aa0f2cb872620b","type":"ha-entity","z":"e39408b25de24f2f","name":"BatteryTimeLeft","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2SBatteryTimeLeft"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":"Hrs"},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":1280,"y":640,"wires":[[]]},{"id":"894d68a30402359e","type":"function","z":"e39408b25de24f2f","name":"Daly2Sofar-temp","func":"//Cell imbalance between min&max cells in millivolts to volts\nmsg.payload = msg.payload.temp\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":450,"y":500,"wires":[["a8d98c6bfea6236f"]],"info":"This function sets the format of each parameter sent by the inverter and assigns each on to a global variable.\r\nTherefore, you can either pass the msg.payload object directly to the next function or pick up inverter \r\nparameters in any function using something like:\r\n\r\nUsing the complete object...\r\n\r\nvar sofar2mqtt = global.get(\"sofar2mqtt\");\r\nvar batterySoc = sofar2mqtt.batterySoc;\r\n\r\nor use individual variables...\r\n\r\nvar batterySoc = global.get(\"sofarBatterySOC\");"},{"id":"a8d98c6bfea6236f","type":"ha-entity","z":"e39408b25de24f2f","name":"D2S-Temp","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2STemp"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":"C"},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":690,"y":500,"wires":[[]]},{"id":"b558560980620bea","type":"ha-entity","z":"e39408b25de24f2f","name":"ChargeOrDischarge","server":"6178e120.ea2bf","version":2,"debugenabled":false,"outputs":1,"entityType":"sensor","config":[{"property":"name","value":"D2SChargeOrDischarge"},{"property":"device_class","value":""},{"property":"icon","value":""},{"property":"unit_of_measurement","value":""},{"property":"state_class","value":""},{"property":"last_reset","value":""}],"state":"payload","stateType":"msg","attributes":[],"resend":true,"outputLocation":"payload","outputLocationType":"none","inputOverride":"allow","outputOnStateChange":false,"outputPayload":"","outputPayloadType":"str","x":1290,"y":720,"wires":[[]]},{"id":"90f77a3d9e83bbc5","type":"function","z":"e39408b25de24f2f","name":"ChargeOrDischarge","func":"var averagePower = global.get(\"averagePower\");\nvar chargeOrDischarge = '';\n\nif (averagePower === 0) {\n    chargeOrDischarge = 'Resting ...';\n    } else if (averagePower > 0){\n    chargeOrDischarge = 'Charging';\n    } else if (averagePower < 0){\n    chargeOrDischarge = 'Discharging';\n}\n\nglobal.set(\"chargeOrDischarge\", chargeOrDischarge);\n\nmsg.payload = chargeOrDischarge;\nreturn msg;","outputs":1,"noerr":0,"initialize":"","finalize":"","libs":[],"x":970,"y":720,"wires":[["b558560980620bea"]]},{"id":"98a72657b1ac3f6a","type":"mqtt-broker","name":"Mosquitto","broker":"http://localhost","port":"1883","clientid":"","autoConnect":true,"usetls":false,"protocolVersion":"4","keepalive":"60","cleansession":true,"birthTopic":"","birthQos":"0","birthPayload":"","birthMsg":{},"closeTopic":"","closeQos":"0","closePayload":"","closeMsg":{},"willTopic":"","willQos":"0","willPayload":"","willMsg":{},"sessionExpiry":""},{"id":"6178e120.ea2bf","type":"server","name":"Home Assistant","addon":true}]